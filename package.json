{
  "name": "truffle-vscode",
  "displayName": "Truffle for VS Code",
  "description": "Build, debug and deploy smart contracts on Ethereum and EVM-compatible blockchains.",
  "publisher": "trufflesuite-csi",
  "preview": true,
  "icon": "images/TruffleLogo.png",
  "version": "2.3.5",
  "repository": {
    "type": "git",
    "url": "https://github.com/trufflesuite/vscode-ext"
  },
  "bugs": {
    "url": "https://github.com/trufflesuite/vscode-ext/issues"
  },
  "homepage": "https://github.com/trufflesuite/vscode-ext/blob/master/README.md",
  "license": "MIT",
  "engines": {
    "vscode": "^1.66.0"
  },
  "keywords": [
    "blockchain",
    "solidity",
    "truffle",
    "ethereum",
    "evm",
    "debugger",
    "compiler",
    "ganache",
    "infura"
  ],
  "categories": [
    "Extension Packs",
    "Programming Languages"
  ],
  "aiKey": "INSERTAIKEY",
  "main": "./out/src/extension.js",
  "activationEvents": [
    "onView:truffle-vscode.truffle",
    "onView:truffle-vscode.explorer-view",
    "onView:truffle-vscode.panel.log",
    "onCommand:truffle-vscode.showWelcomePage",
    "onCommand:truffle-vscode.showRequirementsPage",
    "onCommand:truffle-vscode.refresh",
    "onCommand:truffle-vscode.copyByteCode",
    "onCommand:truffle-vscode.copyDeployedByteCode",
    "onCommand:truffle-vscode.copyABI",
    "onCommand:truffle-vscode.createLocalUI",
    "onCommand:truffle-vscode.newSolidityProject",
    "onCommand:truffle-vscode.buildContracts",
    "onCommand:truffle-vscode.buildSingleContract",
    "onCommand:truffle-vscode.deployContracts",
    "onCommand:truffle-vscode.createContract",
    "onCommand:truffle-vscode.connectProject",
    "onCommand:truffle-vscode.copyRPCEndpointAddress",
    "onCommand:truffle-vscode.createProject",
    "onCommand:truffle-vscode.disconnectProject",
    "onCommand:truffle-vscode.debugTransaction",
    "onCommand:truffle-vscode.signInToInfuraAccount",
    "onCommand:truffle-vscode.signOutOfInfuraAccount",
    "onCommand:truffle-vscode.startGanacheServer",
    "onCommand:truffle-vscode.stopGanacheServer",
    "onCommand:truffle-vscode.views.explorer.refreshExplorer",
    "onCommand:truffle-vscode.views.deployments.refresh",
    "onCommand:truffle-vscode.views.dashboard.startDashboardServer",
    "onCommand:truffle-vscode.views.dashboard.stopDashboardServer",
    "onCommand:truffle-vscode.views.dashboard.restartDashboardServer",
    "onCommand:truffle-vscode.views.dashboard.openDashboard",
    "onCommand:truffle-vscode.views.dashboard.copyRPCEndpointAddress",
    "onDebug",
    "onUri"
  ],
  "contributes": {
    "configuration": {
      "title": "Truffle for VSCode",
      "properties": {
        "truffle-vscode.ignoreLongRunningTaskNotification": {
          "type": "boolean",
          "default": false,
          "description": "Disable notification on long running tasks."
        },
        "truffle-vscode.storageAccount.name": {
          "type": "string",
          "scope": "Storage Account name"
        },
        "truffle-vscode.coreSDK": {
          "type": "string",
          "scope": "Core SDK for extensions backend",
          "default": "Truffle",
          "enum": [
            "Truffle"
          ]
        }
      }
    },
    "commands": [
      {
        "command": "truffle-vscode.showWelcomePage",
        "title": "Show Welcome Page",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.showRequirementsPage",
        "title": "Show Requirements Page",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.checkForConnection",
        "title": "Check network connection",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.refresh",
        "title": "Refresh",
        "category": "Truffle",
        "icon": "$(refresh)"
      },
      {
        "command": "truffle-vscode.copyByteCode",
        "title": "Copy Constructor Bytecode",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.copyDeployedByteCode",
        "title": "Copy Transaction Bytecode",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.copyABI",
        "title": "Copy Contract ABI",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.newSolidityProject",
        "title": "New Solidity Project",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.buildContracts",
        "title": "Build Contracts",
        "category": "Truffle",
        "icon": "$(run-all)"
      },
      {
        "command": "truffle-vscode.buildSingleContract",
        "title": "Build This Contract",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.deployContracts",
        "title": "Deploy Contracts",
        "category": "Truffle",
        "icon": "$(radio-tower)"
      },
      {
        "command": "truffle-vscode.createContract",
        "title": "Create Contract",
        "category": "Truffle",
        "icon": "$(add)"
      },
      {
        "command": "truffle-vscode.connectProject",
        "title": "Connect to network",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.copyRPCEndpointAddress",
        "title": "Copy RPC Endpoint Address",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.createProject",
        "title": "Create a new network",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.disconnectProject",
        "title": "Disconnect",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.startGanacheServer",
        "title": "Start Ganache",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.stopGanacheServer",
        "title": "Stop Ganache",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.restartGanacheServer",
        "title": "Restart Ganache",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.getGanacheServerInfo",
        "title": "Get Details...",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.signInToInfuraAccount",
        "title": "Sign in to Infura account",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.signOutOfInfuraAccount",
        "title": "Sign out of Infura account",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.debugTransaction",
        "title": "Debug Transaction",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.getPrivateKey",
        "title": "Retrieve private key",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.views.explorer.refreshExplorer",
        "title": "Refresh Explorer",
        "category": "Truffle",
        "icon": "$(refresh)"
      },
      {
        "command": "truffle-vscode.views.explorer.openFile",
        "title": "Open File"
      },
      {
        "command": "truffle-vscode.views.deployments.refresh",
        "title": "Refresh Deployments",
        "category": "Truffle",
        "icon": "$(refresh)"
      },
      {
        "command": "truffle-vscode.views.dashboard.startDashboardServer",
        "title": "Start Dashboard",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.views.dashboard.stopDashboardServer",
        "title": "Stop Dashboard",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.views.dashboard.restartDashboardServer",
        "title": "Restart Dashboard",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.views.dashboard.openDashboard",
        "title": "Open Dashboard in Web Browser",
        "category": "Truffle",
        "icon": "$(link-external)"
      },
      {
        "command": "truffle-vscode.views.dashboard.copyRPCEndpointAddress",
        "title": "Copy RPC Endpoint Address",
        "category": "Truffle"
      },
      {
        "command": "truffle-vscode.contracts.deployOnSave",
        "title": "Deploy the contract when it is saved",
        "category": "Truffle"
      }
    ],
    "breakpoints": [
      {
        "language": "solidity"
      },
      {
        "language": "sol"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "when": "false",
          "command": "truffle-vscode.refresh"
        },
        {
          "when": "false",
          "command": "truffle-vscode.copyRPCEndpointAddress"
        },
        {
          "when": "false",
          "command": "truffle-vscode.disconnectProject"
        },
        {
          "when": "false",
          "command": "truffle-vscode.copyByteCode"
        },
        {
          "when": "false",
          "command": "truffle-vscode.copyDeployedByteCode"
        },
        {
          "when": "false",
          "command": "truffle-vscode.copyABI"
        },
        {
          "when": "workspaceFolderCount > 0",
          "command": "truffle-vscode.buildContracts"
        },
        {
          "when": "workspaceFolderCount > 0",
          "command": "truffle-vscode.deployContracts"
        },
        {
          "when": "workspaceFolderCount > 0",
          "command": "truffle-vscode.createContract"
        },
        {
          "when": "false",
          "command": "truffle-vscode.buildSingleContract"
        },
        {
          "when": "false",
          "command": "truffle-vscode.getGanacheServerInfo"
        },
        {
          "when": "false",
          "command": "truffle-vscode.contracts.deployOnSave"
        }
      ],
      "view/title": [
        {
          "command": "truffle-vscode.showWelcomePage",
          "when": "view == truffle-vscode.truffle"
        },
        {
          "command": "truffle-vscode.createProject",
          "when": "view == truffle-vscode.truffle"
        },
        {
          "command": "truffle-vscode.connectProject",
          "when": "view == truffle-vscode.truffle"
        },
        {
          "command": "truffle-vscode.refresh",
          "when": "view == truffle-vscode.truffle",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.views.explorer.refreshExplorer",
          "when": "view == truffle-vscode.views.explorer",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.buildContracts",
          "when": "view == truffle-vscode.views.explorer",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.deployContracts",
          "when": "view == truffle-vscode.views.explorer",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.createContract",
          "when": "view == truffle-vscode.views.explorer",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.views.deployments.refresh",
          "when": "view == truffle-vscode.views.deployments",
          "group": "navigation"
        },
        {
          "command": "truffle-vscode.views.dashboard.openDashboard",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "truffle-vscode.disconnectProject",
          "when": "view == truffle-vscode.truffle && viewItem == project",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.disconnectProject",
          "when": "view == truffle-vscode.truffle && viewItem == localproject",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.startGanacheServer",
          "when": "view == truffle-vscode.truffle && viewItem == localproject",
          "group": "truffle-1@0"
        },
        {
          "command": "truffle-vscode.stopGanacheServer",
          "when": "view == truffle-vscode.truffle && viewItem == localproject",
          "group": "truffle-1@1"
        },
        {
          "command": "truffle-vscode.restartGanacheServer",
          "when": "view == truffle-vscode.truffle && viewItem == localproject",
          "group": "truffle-1@2"
        },
        {
          "command": "truffle-vscode.getGanacheServerInfo",
          "when": "view == truffle-vscode.truffle && viewItem == localproject",
          "group": "truffle-2@0"
        },
        {
          "command": "truffle-vscode.copyRPCEndpointAddress",
          "when": "view == truffle-vscode.truffle && viewItem == network",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.copyRPCEndpointAddress",
          "when": "view == truffle-vscode.truffle && viewItem == localnetwork",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.createContract",
          "when": "view == truffle-vscode.views.explorer && viewItem != file",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.buildContracts",
          "when": "view == truffle-vscode.views.explorer && viewItem == root",
          "group": "truffle-0@1"
        },
        {
          "command": "truffle-vscode.buildSingleContract",
          "when": "view == truffle-vscode.views.explorer && viewItem == file",
          "group": "truffle-0@1"
        },
        {
          "command": "truffle-vscode.deployContracts",
          "when": "view == truffle-vscode.views.explorer && viewItem == root",
          "group": "truffle-0@2"
        },
        {
          "command": "truffle-vscode.debugTransaction",
          "when": "view == truffle-vscode.views.explorer && viewItem == root",
          "group": "truffle-1@0"
        },
        {
          "command": "truffle-vscode.disconnectProject",
          "when": "view == truffle-vscode.truffle && viewItem == genericproject",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.checkForConnection",
          "when": "view == truffle-vscode.truffle && viewItem == genericproject",
          "group": "truffle-1@0"
        },
        {
          "command": "truffle-vscode.views.dashboard.startDashboardServer",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "truffle-0@0"
        },
        {
          "command": "truffle-vscode.views.dashboard.stopDashboardServer",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "truffle-0@1"
        },
        {
          "command": "truffle-vscode.views.dashboard.restartDashboardServer",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "truffle-0@2"
        },
        {
          "command": "truffle-vscode.views.dashboard.openDashboard",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "truffle-1@0"
        },
        {
          "command": "truffle-vscode.views.dashboard.copyRPCEndpointAddress",
          "when": "view == truffle-vscode.views.dashboard",
          "group": "truffle-1@1"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == solidity",
          "command": "truffle-vscode.buildContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle-vscode.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "truffle-vscode.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle-vscode.copyByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle-vscode.copyDeployedByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle-vscode.copyABI",
          "group": "9_copyFromContractGroup"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "truffle-vscode.views.explorer",
        "contents": "In order to use truffle features, you can open a folder containing a truffle project with a `contracts` folder present.\n[Open Folder](command:vscode.openFolder)\n[Clone Repository](command:git.clone)\nTo learn more about how to create a Truffle project [read our docs](https://trufflesuite.com/docs/vscode-ext/quickstart/#create-a-new-solidity-contract)."
      },
      {
        "view": "truffle-vscode.views.deployments",
        "contents": "Deployed contracts will appear here."
      }
    ],
    "views": {
      "truffle-activitybar-container": [
        {
          "id": "truffle-vscode.views.explorer",
          "name": "Contract Explorer"
        },
        {
          "id": "truffle-vscode.views.dashboard",
          "name": "Dashboard"
        },
        {
          "id": "truffle-vscode.truffle",
          "name": "Networks",
          "contextualTitle": "List of all known Networks"
        },
        {
          "id": "truffle-vscode.views.deployments",
          "name": "Deployments"
        },
        {
          "id": "truffle-vscode.views.help",
          "name": "Help & Feedback",
          "contextualTitle": "Help & Feedback section"
        }
      ],
      "truffle-panel": [
        {
          "type": "webview",
          "id": "truffle-vscode.panel.log",
          "name": "",
          "contextualTitle": "Truffle",
          "icon": "images/views/history.svg"
        }
      ],
      "debug": [
        {
          "id": "truffle-vscode.InstructionView",
          "name": "Truffle - Instructions"
        }
      ]
    },
    "debuggers": [
      {
        "type": "truffle",
        "label": "Truffle - Debugger",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "txHash",
              "workingDirectory"
            ],
            "properties": {
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "txHash": {
                "type": "string",
                "description": "The transaction hash to debug.",
                "default": "0x"
              },
              "files": {
                "type": "string[]",
                "description": "Array of file paths of solidity files to debug.",
                "default": []
              },
              "workingDirectory": {
                "type": "string",
                "description": "Directory of the Truffle project where to find the Truffle config file.",
                "default": "${workspaceFolder}"
              },
              "providerUrl": {
                "type": "string",
                "description": "Provider's URL of the Ethereum network to connect to.",
                "default": "http://127.0.0.1:8545"
              },
              "network": {
                "type": "string",
                "description": "Name of the Ethereum network to connect to. The network name should be a key in the `networks` object in your Truffle config file.",
                "default": "development"
              },
              "disableFetchExternal": {
                "type": "boolean",
                "description": "When set, do not try to fetch external contract sources when debugging a forked network instance. When the network is not being forked, this flag is ignored.",
                "default": false
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "truffle",
            "request": "launch",
            "name": "Truffle - Debug Transaction",
            "stopOnEntry": false,
            "txHash": "0x",
            "files": [],
            "workingDirectory": "${workspaceFolder}",
            "providerUrl": "http://127.0.0.1:8545",
            "disableFetchExternal": false
          }
        ],
        "configurationSnippets": [
          {
            "label": "Truffle - Debugger Launch",
            "description": "Runs the Truffle debugger (truffle) and attaches to a TestRPC instance",
            "body": {
              "type": "truffle",
              "request": "launch",
              "name": "Debug Transaction with Truffle",
              "stopOnEntry": false,
              "txHash": "0x",
              "files": [],
              "workingDirectory": "^\"\\${workspaceFolder}\"",
              "providerUrl": "http://127.0.0.1:8545",
              "disableFetchExternal": false
            }
          },
          {
            "label": "Truffle - Debugger Launch using config network",
            "description": "Runs the Truffle debugger (truffle) and attaches to a TestRPC instance",
            "body": {
              "type": "truffle",
              "request": "launch",
              "name": "Debug Transaction with Truffle",
              "stopOnEntry": false,
              "txHash": "0x",
              "files": [],
              "workingDirectory": "^\"\\${workspaceFolder}\"",
              "network": "development",
              "disableFetchExternal": false
            }
          }
        ],
        "variables": {}
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "truffle-activitybar-container",
          "title": "Truffle",
          "icon": "images/truffle.svg"
        }
      ],
      "panel": [
        {
          "id": "truffle-panel",
          "title": "Truffle",
          "icon": "images/truffle.svg"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "truffle-walkthrough",
        "title": "Build on Web3 with Truffle for VS Code",
        "description": "Discover how you can code, debug, and deploy your smart contracts directly from VS Code.",
        "steps": [
          {
            "id": "truffle-walkthrough.explore-commands",
            "title": "Explore Truffle Commands",
            "description": "All available Truffle commands can be found in the Command Palette. Just open the Command Palette and filter by typing **\"truffle\"**.\n[Explore Truffle Commands](command:workbench.action.quickOpen?%22>%20Truffle:%20%22)",
            "media": {
              "image": "resources/walkthrough/explore-commands.png",
              "altText": "explore commands"
            }
          },
          {
            "id": "truffle-walkthrough.new-solidity-project",
            "title": "Create a new Solidity project",
            "description": "You can create a new Solidity project right from VS Code, you just need to select __Truffle: New Solidity Project__ from the Command Palette.\n[Create Project](command:truffle-vscode.newSolidityProject)",
            "media": {
              "markdown": "resources/walkthrough/create-project.md"
            },
            "completionEvents": [
              "onCommand:truffle-vscode.newSolidityProject"
            ]
          },
          {
            "id": "truffle-walkthrough.deploy-contracts",
            "title": "Build and Deploy your Smart Contracts",
            "description": "From the File Explorer or Contract Explorer, you can right-click and select __Build Contracts__ or __Deploy Contracts__ to compile or deploy the selected smart contract(s) respectively.",
            "media": {
              "image": "resources/walkthrough/deploy-contracts.png",
              "altText": "deploy contracts"
            }
          },
          {
            "id": "truffle-walkthrough.connect-ganache",
            "title": "Connect to Ganache local Blockchain",
            "description": "The VS Code extension allows you to start, stop, and deploy smart contracts to the Ganache local blockchain without leaving VS Code.\n[Create new Network](command:truffle-vscode.createProject) or create a new Ganache network under the **Networks** view and right-click to see the start/stop menu.\n[Start Ganache](command:truffle-vscode.startGanacheServer)",
            "media": {
              "markdown": "resources/walkthrough/connect-ganache.md"
            },
            "completionEvents": [
              "onCommand:truffle-vscode.startGanacheServer"
            ]
          },
          {
            "id": "truffle-walkthrough.debug",
            "title": "Debug Transactions",
            "description": "The Truffle Debugger uses the native VS Code debugging feature, allowing you to debug transactions in the way you are familiar with: visually stepping through the code to understand how it behaves.\n[Debug Transaction](command:truffle-vscode.debugTransaction)",
            "media": {
              "markdown": "resources/walkthrough/debug-transactions.md"
            },
            "completionEvents": [
              "onCommand:truffle-vscode.debugTransaction"
            ]
          },
          {
            "id": "truffle-walkthrough.sign-in-to-infura",
            "title": "Sign in to your Infura account",
            "description": "With this extension, you no longer need to leave the VS Code application to create a new Infura project or deploy to an existing one.\nInstead, you can sign in to your Infura account from VS Code by simply clicking a button. This lists all your Infura projects and their corresponding network RPC endpoints.\n[Sign in to Infura](command:truffle-vscode.signInToInfuraAccount)",
            "media": {
              "markdown": "resources/walkthrough/infura-sign-in.md"
            }
          },
          {
            "id": "truffle-walkthrough.resources",
            "title": "Resources",
            "description": "",
            "media": {
              "markdown": "resources/walkthrough/resources.md"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "package": "npx vsce package",
    "publish": "npx vsce publish",
    "vscode:prepublish": "yarn && yarn webpack:prod",
    "compile": "yarn clean && tsc -p ./",
    "compile:webpack": "yarn compile && yarn run webpack:dev",
    "webpack:dev": "webpack --config webpack.dev.js",
    "webpack:prod": "webpack --config webpack.prod.js",
    "watch:webpack": "webpack --watch --config webpack.dev.js",
    "copyFiles": "copyfiles -V -f ./src/helpers/checkTruffleConfigTemplate.js ./out/src/",
    "watch:tsc": "tsc-watch --onCompilationComplete \"yarn copyFiles\" ",
    "watch": "yarn watch:tsc",
    "prettier": "prettier --check .",
    "prettier:fix": "prettier --write .",
    "eslint": "eslint src/* test/*",
    "eslint:fix": "eslint --fix src/* test/*",
    "version": "tsc -v",
    "test": "mocha",
    "test:int": "yarn run compile && node ./out/test/runTest",
    "clean": "npx rimraf -- ./out/*",
    "postinstall": "husky install",
    "prepare": "ts-patch install -s && husky install"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@types/big.js": "^6.1.2",
    "@types/copy-webpack-plugin": "^8.0.1",
    "@types/download": "^6.2.4",
    "@types/estree": "^0.0.52",
    "@types/fs-extra": "^7.0.0",
    "@types/glob": "^7.1.1",
    "@types/hdkey": "^0.7.0",
    "@types/istanbul": "^0.4.30",
    "@types/lodash": "4.14.178",
    "@types/mkdirp": "^1.0.2",
    "@types/mocha": "^5.2.7",
    "@types/mockery": "^1.4.30",
    "@types/request": "^2.48.1",
    "@types/request-promise": "^4.1.44",
    "@types/rewire": "^2.5.28",
    "@types/rimraf": "^3.0.2",
    "@types/semver": "^6.0.0",
    "@types/sinon": "^7.0.11",
    "@types/source-map": "^0.5.2",
    "@types/uuid": "^3.4.4",
    "@types/vscode": "1.66.0",
    "@typescript-eslint/eslint-plugin": "^5.29.0",
    "@typescript-eslint/parser": "^5.29.0",
    "@vscode/debugadapter": "^1.55.1",
    "@vscode/debugprotocol": "^1.55.1",
    "@vscode/test-electron": "^2.1.3",
    "copy-webpack-plugin": "^10.0.0",
    "copyfiles": "^2.4.1",
    "decache": "^4.5.1",
    "eslint": "^8.2.0",
    "eslint-config-prettier": "8.5.0",
    "husky": "^8.0.1",
    "istanbul": "^0.4.5",
    "lint-staged": "^8.2.0",
    "mocha": "^6.2.3",
    "mockery": "^2.1.0",
    "prettier": "2.7.1",
    "pretty-quick": "^3.1.3",
    "remap-istanbul": "^0.13.0",
    "rewire": "^4.0.1",
    "sinon": "^7.3.2",
    "truffle": "^5.5.30",
    "ts-loader": "9.3.1",
    "ts-node": "^10.8.1",
    "ts-patch": "^2.0.1",
    "tsc-watch": "^5.0.3",
    "tsconfig-paths-webpack-plugin": "3.5.2",
    "typescript": "4.7.4",
    "typescript-transform-paths": "^3.3.1",
    "webpack": "5.73.0",
    "webpack-cli": "4.10.0",
    "webpack-merge": "^5.8.0"
  },
  "dependencies": {
    "@truffle/codec": "^0.14.5",
    "@truffle/compile-common": "0.8.1",
    "@truffle/compile-solidity": "^6.0.31",
    "@truffle/config": "1.3.38",
    "@truffle/debug-utils": "^6.0.26",
    "@truffle/debugger": "^10.0.14",
    "@truffle/environment": "^0.2.130",
    "@truffle/fetch-and-compile": "^0.5.19",
    "@truffle/resolver": "^9.0.4",
    "@truffle/workflow-compile": "^4.0.36",
    "abi-decoder": "^2.4.0",
    "acorn": "^8.7.1",
    "acorn-walk": "^8.2.0",
    "astring": "^1.7.5",
    "bip39": "^3.0.1",
    "download": "^7.1.0",
    "fs-extra": "^7.0.1",
    "glob": "^7.1.4",
    "hdkey": "^1.1.1",
    "lodash": "4.17.21",
    "mkdirp": "^1.0.4",
    "request": "^2.88.0",
    "request-promise": "^4.2.4",
    "rimraf": "^3.0.2",
    "semver": "^6.0.0",
    "solidity-parser-antlr": "^0.4.11",
    "uuid": "^3.3.2",
    "vscode-extension-telemetry": "^0.4.5",
    "web3": "1.7.4"
  },
  "extensionDependencies": [
    "JuanBlanco.solidity"
  ],
  "__metadata": {
    "id": "6b46df02-0a05-4fe7-a214-48530cdace4e",
    "publisherDisplayName": "ConsenSys Software Inc.",
    "publisherId": "0e0a6137-fd21-4312-b0f5-ff30c8d7a457",
    "isPreReleaseVersion": true
  }
}
